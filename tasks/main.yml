---
# file: roles/common/tasks/main.yml
- name: packages install
  yum: name={{item}} state=present
  with_items:
    - openssh-clients
    - libselinux-python
    - ntp

- name: disable selinux
  shell: setenforce Permissive
  when: ansible_selinux.status is not defined or ansible_selinux.status != "disabled"

- name: disable selinux setting
  lineinfile: dest=/etc/selinux/config regexp='^SELINUX=.*' line="SELINUX=disabled" state=present backup=true
  when: ansible_selinux.status is not defined or ansible_selinux.status != "disabled"

- name: disable services
  service: name={{item}} state=stopped enabled=no
  with_items:
    - iptables
    - ip6tables
#    - NetworkManager

- name: generate hosts files
  lineinfile: dest=/etc/hosts regexp='^{{item}}.*' line="{{item}} {{hostvars[item].ansible_fqdn}} {{hostvars[item].ansible_hostname}}" state=present backup=true
  when: hostvars[item].ansible_fqdn is defined
  with_items: groups['all']

- name: Add NOZEROCONF
  lineinfile: dest=/etc/sysconfig/network regexp="^NOZEROCONF" line="NOZEROCONF=yes" state=present backup=true

- name: Disable ipv6
  lineinfile: dest=/etc/modprobe.d/ipv6.conf regexp='^options ipv6 disable.*' line="options ipv6 disable=1" state=present create=yes backup=true

- name: add ulimits settings
  template: src=enableulimit.sh.j2 dest=/etc/profile.d/enableulimit.sh owner=root group=root mode=0644 backup=true

- name: ntp step-tickers settings
  template: src=etc_ntp_step-tickers.j2 dest=/etc/ntp/step-tickers owner=root group=root mode=0644 backup=true
  when: ntp_server is defined
  notify:
    - ntpd restart

- name: ntp.conf settings
  template: src=ntp.conf.j2 dest=/etc/ntp.conf owner=root group=root mode=0644 backup=true
  when: ntp_server is defined
  notify:
    - ntpd restart

- name: /etc/sysconfig/ntpd settings
  template: src=etc_sysconfig_ntpd.j2 dest=/etc/sysconfig/ntpd owner=root group=root mode=0644 backup=true
  when: ntp_server is defined
  notify:
    - ntpd restart

- name: ntpd running check
  command: service ntpd status
  register: running_ntpd
  failed_when: running_ntpd.rc not in [0,1,3]
  changed_when: running_ntpd.rc != 0

- name: run ntpdate
  service: name=ntpdate state=started
  when: running_ntpd.rc == 1 and ntp_server is defined

- name: enable ntpdate service
  service: name=ntpdate enabled=yes
  when: ntp_server is defined

- name: enable services
  service: name={{item}} state=started enabled=yes
  with_items:
    - ntpd
  when: ntp_server is defined

- name: Add common group
  group:
    name={{item.group}}
    gid={{item.gid}}
  with_items: common_user
  when: common_user is defined

- name: Add common user
  user:
    name="{{item.name}}"
    password="{{item.password}}"
    uid="{{item.uid}}"
    group="{{item.group}}"
    comment="{{item.name}}"
  with_items: common_user
  when: common_user is defined

- name: reboot after change selinux
  shell: nohup bash -c "sleep 2s && reboot" &
  when: ansible_selinux.status is not defined or ansible_selinux.status != "disabled"

- name: wait for the server to go down (reboot)
  local_action: wait_for host={{ inventory_hostname }} port=22 state=stopped
  when: ansible_selinux.status is not defined or ansible_selinux.status != "disabled"

- name: wait for the server to come up
  local_action: wait_for host={{ inventory_hostname }} port=22
  when: ansible_selinux.status is not defined or ansible_selinux.status != "disabled"
